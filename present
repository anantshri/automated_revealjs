#!/bin/bash
echo "Present : Reveal.js Workflow Automation"
echo "Created by: Anant Shrivastava"
RJSVER="3.0.0"
CW=`pwd`
BASE="$HOME/Work/Presentations/presentation_resources/reveal/"
BASE_HTML=$BASE"/html"
HEADLESS=0
if [ $# -gt 0 ]
then
	if [ $1 == "headless" ]
	then
		HEADLESS=1
		shift
	fi
fi
if [ $HEADLESS == 1 ]
then
	echo "Headless mode selected ignoring browser check"
else
	if [[ "$OSTYPE" == "darwin"* ]]
	then
		if [ -f "$HOME/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" ]
	    then
	        BROWSER="$HOME/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"
	    elif [ -f "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" ]
	    then
	        BROWSER="/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"    
	    elif [ -f "$HOME/Applications/Chromium.app/Contents/MacOS/Chromium" ]
		then
			BROWSER="$HOME/Applications/Chromium.app/Contents/MacOS/Chromium"
		elif [ -f "/Applications/Chromium.app/Contents/MacOS/Chromium" ]
		then
			BROWSER="/Applications/Chromium.app/Contents/MacOS/Chromium"
		else
			echo "Chromium / Chrome browser was not found to be installed"
			echo "Please install it to use this script properly" 
			BROWSER="/Applications/Chromium.app/Contents/MacOS/Chromium"
		fi
	else
		if [ -f "/usr/bin/google-chrome" ]
	    then
	        BROWSER="/usr/bin/google-chrome"
	    elif [ -f "/usr/bin/chromium-browser" ]
		then
			BROWSER="/usr/bin/chromium-browser"
		else
			echo "Chromium/Chrome browser was not found to be installed"
			echo "Please install it to use this script properly" 
			BROWSER="/usr/bin/chromium-browser"
		fi
	fi
fi
BROWSER="$BROWSER"
BROWSER_PROFILE="$HOME/.profiles_chromium/presentor"
RESOURCES="$HOME/Work/Presentations/presentation_resources/resources/"
MARKDOWN_MODULES="$HOME/Work/Presentations/presentation_resources/markdown_modules/"
BASE_URL="https://github.com/anantshri/present/"
DEF_NAME="presentation.md"
if [ $# -eq 0 ]
then
	if [ $HEADLESS == 0 ]
	then
		python2 -m SimpleHTTPServer 9099 &
		pid=$!
		$BROWSER --app="http://localhost:9099/" --disable-gpu  --user-data-dir="$BROWSER_PROFILE"
		kill -KILL $pid
	else
		python2 -m SimpleHTTPServer 9099
	fi
elif [ $# -gt 0 ]
then
	if [ $1 == "init" -o $1 == "update" ]
	then
		echo "checking if base is upto date or not"
		echo "if base is not present we will create directories at $BASE"
		if [ -d $BASE/reveal.js ]
		then
			echo "Folder already exist"
			echo "Reveal.js is fixed to specific version $RJSVER"
			echo "More update features are not yet implemented"
			#cd $BASE/reveal.js
			#git pull
		else
			mkdir -p $BASE
			mkdir -p $MARKDOWN_MODULES
			mkdir -p $RESOURCES
			mkdir -p $BROWSER_PROFILE
			cd $BASE
			echo "git cloning the reveal.js repository"
			git clone --branch $RJSVER https://github.com/hakimel/reveal.js/
			mkdir $BASE_HTML
			#wget https://raw.githubusercontent.com/anantshri/present_revealjs_workflow_automation/master/index.html -O $BASE_HTML/index.html
			curl "https://raw.githubusercontent.com/anantshri/present_revealjs_workflow_automation/master/index.html" -o $BASE_HTML/index.html
			#wget https://raw.githubusercontent.com/anantshri/present_revealjs_workflow_automation/master/index_top.html -O $BASE_HTML/index_top.html
			curl "https://raw.githubusercontent.com/anantshri/present_revealjs_workflow_automation/master/index_top.html" -o $BASE_HTML/index_top.html
			#wget https://raw.githubusercontent.com/anantshri/present_revealjs_workflow_automation/master/index_bottom.html -O $BASE_HTML/index_bottom.html
			curl "https://raw.githubusercontent.com/anantshri/present_revealjs_workflow_automation/master/index_bottom.html" -o $BASE_HTML/index_bottom.html
			#wget https://raw.githubusercontent.com/anantshri/present_revealjs_workflow_automation/master/powerpoint_style.css -O $BASE_HTML/powerpoint_style.css
			curl "https://raw.githubusercontent.com/anantshri/present_revealjs_workflow_automation/master/powerpoint_style.css" -o $BASE_HTML/powerpoint_style.css
			echo "A sample html file is placed please change accordingly" 
			#echo "Please place a templatized html file"
			#echo "Sample template is available at $BASE_URL/blob/master/index.html"
			pwd
		fi
	elif [ $1 == "require" ]
	then
		echo "setup via requirement files"
		if [  -f $2 ]
		then
			inp=""
			style=""
			#echo "testing this section"
			ln -s $MARKDOWN_MODULES ./markdown
			template1='<section data-markdown="'
			template2='" data-separator="\n---\n" data-separator-vertical="\n--\n" data-separator-notes="^Notes:"></section>'
			while read p;
			do
			#echo $MARKDOWN_MODULES$p
			if [ -f $p ]
			then
				inp="$inp $template1$p$template2"
			elif [ -f $MARKDOWN_MODULES$p ]
			then
				inp="$inp $template1"markdown/"$p$template2"
				#echo $inp
			else
				echo "$MARKDOWN_MODULES$p and / or $p file not found : ignoring"
			fi
			done<$2
			# if style.css diff powerpoint_style.css is same then don't append.
			#if [ `diff $BASE_HTML/powerpoint_style.css ./style.css` ]
			#then
			#	echo "powerpoint_style already uptodate"
			#else
			#	echo "Adding powerpoint_style code in custom style.css"
			cat $BASE_HTML/powerpoint_style.css >> ./style.css
			#fi
			if [ -f style.css ]
			then
				style="<link rel='stylesheet' href='style.css'/>"
			fi
			#custom style
			cat $BASE_HTML/index_top.html > ./index.html
			echo $style >> ./index.html
			echo "</head><body><div class='reveal'><div class='slides'>" >> ./index.html
			ln -s $BASE/reveal.js/ ./reveal.js
			#mkdir reveal.js
			#cp -r $BASE/reveal.js/ ./reveal.js/
			echo $inp >> ./index.html
			cat $BASE_HTML/index_bottom.html >> ./index.html
			ln -s $RESOURCES ./resources

		else
			echo "Please specify existing requirement file"
		fi
	elif [ $1 == "setup" ]
	then
		if [ $# -gt 1 -a -f $2 ]
		then
			echo "setup for specific slide md file"
			echo "File Name is "  $2
			DEF_NAME=$2
		else
			echo "Invalid file name specified $2"
			exit
		fi
		echo "Setting up presentation for this folder"
		echo 
		#mkdir reveal.js
		#cp -r $BASE/reveal.js/ ./reveal.js/
		ln -s $BASE/reveal.js/ ./reveal.js
		#sed "s/#markdownfilename#/$DEF_NAME/g" $BASE_HTML/index.html > ./index.html
		style=""
		template1='<section data-markdown="'
		template2='" data-separator="\n---\n" data-separator-vertical="\n--\n" data-separator-notes="^Notes:"></section>'
		cat $BASE_HTML/powerpoint_style.css >> ./style.css
		if [ -f style.css ]
		then
			style="<link rel='stylesheet' href='style.css'/>"
		fi
		#custom style
		cat $BASE_HTML/index_top.html > ./index.html
		echo $style >> ./index.html
		echo "</head><body><div class='reveal'><div class='slides'>" >> ./index.html
		echo $template1"$2"$template2 >> ./index.html
		cat $BASE_HTML/index_bottom.html >> ./index.html
		ln -s $RESOURCES ./resources
	elif [ $1 == "clean" ]
	then
		echo "Lets clear everything then"
		if [ -d "resources" ]
		then
			rm  resources
		fi
		if [ -d "markdown" ]
		then
			rm markdown
		fi
		if [ -d "reveal.js" ]
		then
			rm reveal.js
		fi
		if [ -f "index.html" ]
		then
			rm  index.html
		fi
		if [ `diff $BASE_HTML/powerpoint_style.css ./style.css` ]
		then
			echo "Leaving style.css as is coz of custom code"
		else
			echo "removing style as it has no custom code added"
			rm style.css
		fi
	elif [ $1 == "print" ]
	then
		if [ -f "index.html" ]
		then
			if [ $HEADLESS == 0 ]
			then
				python2 -m SimpleHTTPServer 9099 &
				pid1=$!
				$BROWSER --app="http://localhost:9099/index.html?print-pdf" --disable-gpu  --user-data-dir="$BROWSER_PROFILE"
				kill -KILL $pid1
			else
				python2 -m SimpleHTTPServer 9099 				
			fi
		else
			echo "Index file not found please run present setup first"
		fi
	else
		echo "Un-identified argument"
		echo "setup : setup reveal.js environment"
		echo "setup slide_name.md"
		echo "clean : clear out all files"
	fi
fi
echo "Thanks for using present service"
